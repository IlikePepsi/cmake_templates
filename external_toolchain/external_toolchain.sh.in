#!/usr/bin/env bash

### ATTENTION! ###
# This script is auto-generated by CMake when compiling the sinus_db project. Any changes made here will be lost.
# Any changes should be made in the respective template file (@CMAKE_CURRENT_LIST_DIR@/@ODB_SUPPORT_SCRIPT_TEMPLATE@)

readonly SCRIPT=$(basename "$0")

COMPILE=0
REMOVE=0
DEBUG=0

usage() {
	echo "Usage:"
	echo "${SCRIPT} [options]"
	echo ""
	echo "Create or remove support code files."
  	echo ""
  	echo "Options:"
	echo "-p | --prefix=PREFIX      install support code into given PREFIX"
  	echo "                          (defaults to working directory)"
  	echo "compile                   compile ODB support code files"
  	echo "delete                    remove ODB support code files"
	echo ""
  	echo "-d | --debug              activate debug mode"
	echo "-h | --help               show this message"
	echo ""
}

while [[ "$1" != "" ]]; do
	case $1 in
	    -p)                        	shift
                                	PREFIX=$1
                                	;;
		-prefix=* | --prefix=*)    	PREFIX=$(expr "$1" : "-*prefix=\(.*\)")
        	                        ;;
        compile)                    COMPILE=1
                                    ;;
        remove)                     REMOVE=1
                                    ;;
    	-d | -debug | --debug)		DEBUG=1
                            		;;
    	-h | -help | --help)        usage
            	                    exit 1
                		            ;;
	esac
	shift
done

if [[ ${DEBUG} -eq 1 ]]; then
	set -x
	trap read DEBUG
fi

# Test if --prefix was set
if [[ "x${PREFIX}" == "x" ]]; then
	PREFIX=$(pwd)
fi

# Test if --prefix exists
if [[ ! -d "${PREFIX}" ]]; then
	mkdir -p "${PREFIX}"
fi

BINARY="@TOOLCHAIN@"
INPUT_FILES="@TO_PROCESS@"
OUTPUT_FILES="@PROCESSED_FILES@"

if [[ ${COMPILE} -eq 1 ]]; then
	cd "${PREFIX}" || return
	 ${BINARY} ${INPUT_FILES} ${OUTPUT_FILES}
fi

if [[ ${REMOVE} -eq 1 ]]; then
	cd "${PREFIX}" || return
	if [[ $(find . -iname "*@PROCESSED_PATTERN@.*" | wc -l) -gt 0 ]]; then
	    for f in ${OUTPUT_FILES//;/ }; do
            rm $f 2>/dev/null
        done
    fi
fi
